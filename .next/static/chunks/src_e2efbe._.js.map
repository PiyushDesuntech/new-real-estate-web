{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/My%20Projects/Desun/Real%20state/New%20Patrick/New%20folder/new-real-estate-web/src/components/Agents/components/Heading.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { Breadcrumbs, Typography, Link as MuiLink, Container, Box } from \"@mui/material\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\n\r\nfunction Heading() {\r\n  const pathname = usePathname(); // Get the current path\r\n  const pathSegments = pathname.split(\"/\").filter(Boolean); // Split and filter empty segments\r\n\r\n  const breadcrumbLinks = pathSegments.map((segment, index) => {\r\n    const isLast = index === pathSegments.length - 1;\r\n    const routePath = \"/\" + pathSegments.slice(0, index + 1).join(\"/\");\r\n\r\n    // Capitalize the segment for display\r\n    const displayName = segment\r\n      .replace(/-/g, \" \") // Replace dashes with spaces\r\n      .replace(/\\b\\w/g, (char) => char.toUpperCase()); // Capitalize each word\r\n\r\n    return isLast ? (\r\n      <Typography key={routePath} color=\"text.primary\">\r\n        {displayName}\r\n      </Typography>\r\n    ) : (\r\n      <MuiLink\r\n        key={routePath}\r\n        component={Link}\r\n        href={routePath}\r\n        underline=\"hover\"\r\n        color=\"inherit\"\r\n      >\r\n        {displayName}\r\n      </MuiLink>\r\n    );\r\n  });\r\n\r\n  return (\r\n   <Box sx={{ mt: 4, px: {xs: 1.5, sm: 2,lg: 3}}}>\r\n     <Breadcrumbs aria-label=\"breadcrumb\" separator={<ArrowForwardIosIcon sx={{fontSize: \"10px\"}}/>}>\r\n      <MuiLink component={Link} href=\"/\" underline=\"hover\" color=\"inherit\">\r\n        Home\r\n      </MuiLink>\r\n      {breadcrumbLinks}\r\n    </Breadcrumbs>\r\n    <Typography sx={{ fontSize: \"37px\", fontWeight: 700, color: \"#484848\" }}>Agents</Typography>\r\n   </Box>\r\n  );\r\n}\r\n\r\nexport default Heading;\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAGA;;;AALA;;;;;AAOA,SAAS;;IACP,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD,KAAK,uBAAuB;IACvD,MAAM,eAAe,SAAS,KAAK,CAAC,KAAK,MAAM,CAAC,UAAU,kCAAkC;IAE5F,MAAM,kBAAkB,aAAa,GAAG,CAAC,CAAC,SAAS;QACjD,MAAM,SAAS,UAAU,aAAa,MAAM,GAAG;QAC/C,MAAM,YAAY,MAAM,aAAa,KAAK,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC;QAE9D,qCAAqC;QACrC,MAAM,cAAc,QACjB,OAAO,CAAC,MAAM,KAAK,6BAA6B;SAChD,OAAO,CAAC,SAAS,CAAC,OAAS,KAAK,WAAW,KAAK,uBAAuB;QAE1E,OAAO,uBACL,6LAAC,yMAAA,CAAA,aAAU;YAAiB,OAAM;sBAC/B;WADc;;;;iCAIjB,6LAAC,uLAAA,CAAA,OAAO;YAEN,WAAW,+JAAA,CAAA,UAAI;YACf,MAAM;YACN,WAAU;YACV,OAAM;sBAEL;WANI;;;;;IASX;IAEA,qBACC,6LAAC,oLAAA,CAAA,MAAG;QAAC,IAAI;YAAE,IAAI;YAAG,IAAI;gBAAC,IAAI;gBAAK,IAAI;gBAAE,IAAI;YAAC;QAAC;;0BAC1C,6LAAC,4MAAA,CAAA,cAAW;gBAAC,cAAW;gBAAa,yBAAW,6LAAC,uKAAA,CAAA,UAAmB;oBAAC,IAAI;wBAAC,UAAU;oBAAM;;;;;;;kCACzF,6LAAC,uLAAA,CAAA,OAAO;wBAAC,WAAW,+JAAA,CAAA,UAAI;wBAAE,MAAK;wBAAI,WAAU;wBAAQ,OAAM;kCAAU;;;;;;oBAGpE;;;;;;;0BAEH,6LAAC,yMAAA,CAAA,aAAU;gBAAC,IAAI;oBAAE,UAAU;oBAAQ,YAAY;oBAAK,OAAO;gBAAU;0BAAG;;;;;;;;;;;;AAG7E;GAzCS;;QACU,qIAAA,CAAA,cAAW;;;KADrB;uCA2CM"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file://E%3A/My%20Projects/Desun/Real%20state/New%20Patrick/New%20folder/new-real-estate-web/src/components/Agents/components/AgenttsGridView.js"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Button,\r\n  Pagination,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Box,\r\n  Divider,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Chip,\r\n} from \"@mui/material\";\r\nimport Image from \"next/image\";\r\n\r\nconst agents = [\r\n  {\r\n    id: 1,\r\n    name: \"Tom Willson\",\r\n    role: \"Marketing\",\r\n    phone: \"91 456 9354\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList1.svg\", \r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Thomas Joshe\",\r\n    role: \"Sales\",\r\n    phone: \"981 123 354\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList2.svg\", \r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Isha Powell\",\r\n    role: \"Marketing\",\r\n    phone: \"91 456 9354\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList3.svg\", \r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Agent Vinod\",\r\n    role: \"Sales\",\r\n    phone: \"981 123 354\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList4.svg\", \r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Robert Louis\",\r\n    role: \"Marketing\",\r\n    phone: \"91 456 9354\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList5.svg\", \r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Tuhin Powell\",\r\n    role: \"Sales\",\r\n    phone: \"981 123 354\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList6.svg\", \r\n  },\r\n];\r\n\r\nconst ITEMS_PER_PAGE = 10;\r\n\r\nexport default function AgentsGridView() {\r\n  const [page, setPage] = useState(1);\r\n  const [sort, setSort] = useState(\"Newest\");\r\n  const theme = useTheme();\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const [visiblePhones, setVisiblePhones] = useState({});\r\n\r\n  const handleShowPhone = (id, phone) => {\r\n    setVisiblePhones((prev) => ({\r\n      ...prev,\r\n      [id]: phone,\r\n    }));\r\n  };\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSort(event.target.value);\r\n  };\r\n\r\n  // Simulate sorting (replace with actual logic if necessary)\r\n  const sortedAgents = [...agents].sort((a, b) => {\r\n    if (sort === \"Newest\") return b.id - a.id;\r\n    if (sort === \"Oldest\") return a.id - b.id;\r\n    if (sort === \"Name\") return a.name.localeCompare(b.name);\r\n    return 0;\r\n  });\r\n\r\n  const paginatedAgents = sortedAgents.slice(\r\n    (page - 1) * ITEMS_PER_PAGE,\r\n    page * ITEMS_PER_PAGE\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ paddingTop: \"20px\", px: {xs: 1,sm: 2, lg: 2}, pb: {xs:4, md: 10} }}>\r\n      {/* Filter and Result Display */}\r\n      {/* <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"20px\",\r\n          border: \"2px solid #EBEBEB\",\r\n          borderRadius: \"12px\",\r\n          px: 3,\r\n          py: 2,\r\n          flexWrap: \"wrap\",\r\n          gap: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"body1\">\r\n          Showing {Math.min((page - 1) * ITEMS_PER_PAGE + 1, agents.length)} -{\" \"}\r\n          {Math.min(page * ITEMS_PER_PAGE, agents.length)} of {agents.length}{\" \"}\r\n          results\r\n        </Typography>\r\n        <Box sx={{ display: \"flex\", gap: 2, alignItems: \"center\"}}>\r\n        <Typography>Sort By</Typography>\r\n          <FormControl\r\n            sx={{\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                border: \"none\",\r\n              },\r\n              \"& .MuiOutlinedInput-root\": {\r\n                paddingRight: \"8px\",\r\n              },\r\n              \"& .MuiSelect-icon\": {\r\n                top: \"calc(50% - 12px)\",\r\n                right: \"8px\",\r\n              },\r\n              \"& .Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                border: \"none\",\r\n              },\r\n            }}\r\n          >\r\n            <Select\r\n              value={sort}\r\n              onChange={handleSortChange}\r\n              label=\"Sort by\"\r\n              MenuProps={{\r\n                PaperProps: {\r\n                  sx: {\r\n                    borderRadius: \"8px\",\r\n                    boxShadow: 5,\r\n                    marginTop: \"30px\",\r\n                    \"& .MuiMenuItem-root\": {\r\n                      padding: \"12px 16px\",\r\n                    },\r\n                    \"& .MuiDivider-root\": {\r\n                      margin: \"0 16px\",\r\n                    },\r\n                  },\r\n                },\r\n              }}\r\n              sx={{\r\n                \"& .MuiSelect-select\": {\r\n                  padding: \"8px 16px\",\r\n                  fontSize: \"14px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                },\r\n              }}\r\n            >\r\n              <MenuItem value=\"Newest\">Newest</MenuItem>\r\n              <MenuItem value=\"Oldest\">Oldest</MenuItem>\r\n              <MenuItem value=\"Name\">Name</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      </Box> */}\r\n\r\n      {/* Grid Display */}\r\n      <Grid container spacing={isSmallScreen? 2 : 4} sx={{mt: {xs: 0, md: 0}}}>\r\n        {paginatedAgents.map((agent) => (\r\n          <Grid item xs={12} sm={6} md={4} key={agent.id}>\r\n            <Card\r\n              sx={{\r\n                borderRadius: \"12px\",\r\n                boxShadow: \"none\",\r\n                border: \"2px solid #EBEBEB\",\r\n              }}\r\n            >\r\n              <Box>\r\n                <Box p={2}>\r\n                  <Box\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      src={agent.image}\r\n                      alt={`${agent.name} profile`}\r\n                      layout=\"responsive\"\r\n                      width={650}\r\n                      height={500}\r\n                      style={{ objectFit: \"contain\" }}\r\n                    />\r\n                  </Box>\r\n                  <Typography\r\n                    sx={{\r\n                      fontSize: {xs: \"20px\", sm: \"22px\", md: \"24px\"},\r\n                      fontWeight: 700,\r\n                      color: \"#484848\",\r\n                      mt: 3,\r\n                    }}\r\n                  >\r\n                    {agent.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ fontSize: {xs: \"14px\", sm: \"16px\", md: \"18px\"}, fontWeight: 400, color: \"#6F6F6F\" }}\r\n                  >\r\n                    {agent.role}\r\n                  </Typography>\r\n                  <Box sx={{ display: \"flex\", alignItems: \"center\", mt: 2 }}>\r\n                  <Typography sx={{ fontSize: \"16px\", fontWeight: 400, color: \"#484848\" }}>\r\n                    Phone: {visiblePhones[agent.id] || agent.phone.replace(/\\d{3}$/, \"***\")}\r\n                  </Typography>\r\n                  {!visiblePhones[agent.id] && (\r\n                    <Chip\r\n                      label=\"Show\"\r\n                      clickable\r\n                      sx={{ ml: 1, backgroundColor: \"#878787\", cursor: \"pointer\", borderRadius: \"2px\", color: \"#FFFFFF\" }}\r\n                      onClick={() => handleShowPhone(agent.id, agent.phone)}\r\n                    />\r\n                  )}\r\n                </Box>\r\n                  <Typography\r\n                    sx={{\r\n                      fontSize: {xs: \"14px\", sm: \"16px\", md: \"18px\"},\r\n                      fontWeight: 400,\r\n                      color: \"#484848\",\r\n                      mt: 1,\r\n                    }}\r\n                  >\r\n                    Email: {agent.email}\r\n                  </Typography>\r\n                </Box>\r\n                <Divider />\r\n                <Box\r\n                  sx={{\r\n                    display: \" flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    alignItems: \"center\",\r\n                    py: {xs: 1, md: 1},\r\n                    px: 2,\r\n                    mt: -1\r\n                  }}\r\n                >\r\n                  <Button\r\n                    size=\"large\"\r\n                    sx={{\r\n                      marginTop: \"10px\",\r\n                      border: \"none\",\r\n                      textTransform: \"none\",\r\n                      fontSize: {xs: \"12px\", sm: \"14px\", md: \"16px\"},\r\n                      fontWeight: 400,\r\n                      color: \"#5D5D5D\",\r\n                    }}\r\n                  >\r\n                    View My Listings\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* Pagination */}\r\n      {/* <div\r\n        style={{ marginTop: \"20px\", display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        <Pagination\r\n          count={Math.ceil(sortedAgents.length / ITEMS_PER_PAGE)}\r\n          page={page}\r\n          onChange={handlePageChange}\r\n        />\r\n      </div> */}\r\n    </Box>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAmBA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAFA;;;;AAsBA,MAAM,SAAS;IACb;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;IACT;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;IACT;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;IACT;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;IACT;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;IACT;IACA;QACE,IAAI;QACJ,MAAM;QACN,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;IACT;CACD;AAED,MAAM,iBAAiB;AAER,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,QAAQ,CAAA,GAAA,iMAAA,CAAA,WAAQ,AAAD;IACrB,MAAM,gBAAgB,CAAA,GAAA,0MAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,WAAW,CAAC,IAAI,CAAC;IAC3D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IAEpD,MAAM,kBAAkB,CAAC,IAAI;QAC3B,iBAAiB,CAAC,OAAS,CAAC;gBAC1B,GAAG,IAAI;gBACP,CAAC,GAAG,EAAE;YACR,CAAC;IACH;IAEA,MAAM,mBAAmB,CAAC,OAAO;QAC/B,QAAQ;IACV;IAEA,MAAM,mBAAmB,CAAC;QACxB,QAAQ,MAAM,MAAM,CAAC,KAAK;IAC5B;IAEA,4DAA4D;IAC5D,MAAM,eAAe;WAAI;KAAO,CAAC,IAAI,CAAC,CAAC,GAAG;QACxC,IAAI,SAAS,UAAU,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE;QACzC,IAAI,SAAS,UAAU,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE;QACzC,IAAI,SAAS,QAAQ,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI;QACvD,OAAO;IACT;IAEA,MAAM,kBAAkB,aAAa,KAAK,CACxC,CAAC,OAAO,CAAC,IAAI,gBACb,OAAO;IAGT,qBACE,6LAAC,oLAAA,CAAA,MAAG;QAAC,IAAI;YAAE,YAAY;YAAQ,IAAI;gBAAC,IAAI;gBAAE,IAAI;gBAAG,IAAI;YAAC;YAAG,IAAI;gBAAC,IAAG;gBAAG,IAAI;YAAE;QAAE;kBA6E1E,cAAA,6LAAC,uLAAA,CAAA,OAAI;YAAC,SAAS;YAAC,SAAS,gBAAe,IAAI;YAAG,IAAI;gBAAC,IAAI;oBAAC,IAAI;oBAAG,IAAI;gBAAC;YAAC;sBACnE,gBAAgB,GAAG,CAAC,CAAC,sBACpB,6LAAC,uLAAA,CAAA,OAAI;oBAAC,IAAI;oBAAC,IAAI;oBAAI,IAAI;oBAAG,IAAI;8BAC5B,cAAA,6LAAC,uLAAA,CAAA,OAAI;wBACH,IAAI;4BACF,cAAc;4BACd,WAAW;4BACX,QAAQ;wBACV;kCAEA,cAAA,6LAAC,oLAAA,CAAA,MAAG;;8CACF,6LAAC,oLAAA,CAAA,MAAG;oCAAC,GAAG;;sDACN,6LAAC,oLAAA,CAAA,MAAG;4CACF,IAAI;gDACF,SAAS;gDACT,gBAAgB;gDAChB,YAAY;gDACZ,OAAO;4CACT;sDAEA,cAAA,6LAAC,gIAAA,CAAA,UAAK;gDACJ,KAAK,MAAM,KAAK;gDAChB,KAAK,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC;gDAC5B,QAAO;gDACP,OAAO;gDACP,QAAQ;gDACR,OAAO;oDAAE,WAAW;gDAAU;;;;;;;;;;;sDAGlC,6LAAC,yMAAA,CAAA,aAAU;4CACT,IAAI;gDACF,UAAU;oDAAC,IAAI;oDAAQ,IAAI;oDAAQ,IAAI;gDAAM;gDAC7C,YAAY;gDACZ,OAAO;gDACP,IAAI;4CACN;sDAEC,MAAM,IAAI;;;;;;sDAEb,6LAAC,yMAAA,CAAA,aAAU;4CACT,IAAI;gDAAE,UAAU;oDAAC,IAAI;oDAAQ,IAAI;oDAAQ,IAAI;gDAAM;gDAAG,YAAY;gDAAK,OAAO;4CAAU;sDAEvF,MAAM,IAAI;;;;;;sDAEb,6LAAC,oLAAA,CAAA,MAAG;4CAAC,IAAI;gDAAE,SAAS;gDAAQ,YAAY;gDAAU,IAAI;4CAAE;;8DACxD,6LAAC,yMAAA,CAAA,aAAU;oDAAC,IAAI;wDAAE,UAAU;wDAAQ,YAAY;wDAAK,OAAO;oDAAU;;wDAAG;wDAC/D,aAAa,CAAC,MAAM,EAAE,CAAC,IAAI,MAAM,KAAK,CAAC,OAAO,CAAC,UAAU;;;;;;;gDAElE,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,kBACvB,6LAAC,uLAAA,CAAA,OAAI;oDACH,OAAM;oDACN,SAAS;oDACT,IAAI;wDAAE,IAAI;wDAAG,iBAAiB;wDAAW,QAAQ;wDAAW,cAAc;wDAAO,OAAO;oDAAU;oDAClG,SAAS,IAAM,gBAAgB,MAAM,EAAE,EAAE,MAAM,KAAK;;;;;;;;;;;;sDAIxD,6LAAC,yMAAA,CAAA,aAAU;4CACT,IAAI;gDACF,UAAU;oDAAC,IAAI;oDAAQ,IAAI;oDAAQ,IAAI;gDAAM;gDAC7C,YAAY;gDACZ,OAAO;gDACP,IAAI;4CACN;;gDACD;gDACS,MAAM,KAAK;;;;;;;;;;;;;8CAGvB,6LAAC,gMAAA,CAAA,UAAO;;;;;8CACR,6LAAC,oLAAA,CAAA,MAAG;oCACF,IAAI;wCACF,SAAS;wCACT,gBAAgB;wCAChB,YAAY;wCACZ,IAAI;4CAAC,IAAI;4CAAG,IAAI;wCAAC;wCACjB,IAAI;wCACJ,IAAI,CAAC;oCACP;8CAEA,cAAA,6LAAC,6LAAA,CAAA,SAAM;wCACL,MAAK;wCACL,IAAI;4CACF,WAAW;4CACX,QAAQ;4CACR,eAAe;4CACf,UAAU;gDAAC,IAAI;gDAAQ,IAAI;gDAAQ,IAAI;4CAAM;4CAC7C,YAAY;4CACZ,OAAO;wCACT;kDACD;;;;;;;;;;;;;;;;;;;;;;mBAvF6B,MAAM,EAAE;;;;;;;;;;;;;;;AA6GxD;GAhOwB;;QAGR,iMAAA,CAAA,WAAQ;QACA,0MAAA,CAAA,gBAAa;;;KAJb"}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file://E%3A/My%20Projects/Desun/Real%20state/New%20Patrick/New%20folder/new-real-estate-web/src/components/Agents/components/AgentListView.js"],"sourcesContent":["\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Button,\r\n  Pagination,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Box,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport Image from \"next/image\";\r\n\r\nconst agents = [\r\n  {\r\n    id: 1,\r\n    name: \"Tom Willson\",\r\n    role: \"Marketing\",\r\n    phone: \"91 456 9***\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList1.svg\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Thomas Joshe\",\r\n    role: \"Sales\",\r\n    phone: \"981 123 ***\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList2.svg\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Tom Willson\",\r\n    role: \"Marketing\",\r\n    phone: \"91 456 9***\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList1.svg\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Thomas Joshe\",\r\n    role: \"Sales\",\r\n    phone: \"981 123 ***\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList2.svg\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Tom Willson\",\r\n    role: \"Marketing\",\r\n    phone: \"91 456 9***\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList1.svg\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Thomas Joshe\",\r\n    role: \"Sales\",\r\n    phone: \"981 123 ***\",\r\n    email: \"infoagent@example.com\",\r\n    image: \"/Images/agentList2.svg\",\r\n  },\r\n];\r\n\r\nconst ITEMS_PER_PAGE = 4;\r\n\r\nexport default function AgentListView() {\r\n  const [page, setPage] = useState(1);\r\n  const [sort, setSort] = useState(\"Newest\");\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSort(event.target.value);\r\n  };\r\n\r\n  // Simulate sorting (replace with actual logic if necessary)\r\n  const sortedAgents = [...agents].sort((a, b) => {\r\n    if (sort === \"Newest\") return b.id - a.id;\r\n    if (sort === \"Oldest\") return a.id - b.id;\r\n    if (sort === \"Name\") return a.name.localeCompare(b.name);\r\n    return 0;\r\n  });\r\n\r\n  const paginatedAgents = sortedAgents.slice(\r\n    (page - 1) * ITEMS_PER_PAGE,\r\n    page * ITEMS_PER_PAGE\r\n  );\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"20px\" }}>\r\n      {/* Filter and Result Display */}\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"20px\",\r\n          border: \"2px solid #EBEBEB\",\r\n          borderRadius: \"12px\",\r\n          px: 3,\r\n          py: 2,\r\n          flexWrap: \"wrap\",\r\n          gap: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"body1\">\r\n          Showing {Math.min((page - 1) * ITEMS_PER_PAGE + 1, agents.length)} -{\" \"}\r\n          {Math.min(page * ITEMS_PER_PAGE, agents.length)} of {agents.length}{\" \"}\r\n          results\r\n        </Typography>\r\n        <Box sx={{ display: \"flex\", gap: 2, alignItems: \"center\" }}>\r\n          <Typography>Sort By</Typography>\r\n          <FormControl\r\n            sx={{\r\n              \"& .MuiOutlinedInput-notchedOutline\": {\r\n                border: \"none\",\r\n              },\r\n              \"& .MuiOutlinedInput-root\": {\r\n                paddingRight: \"8px\",\r\n              },\r\n              \"& .MuiSelect-icon\": {\r\n                top: \"calc(50% - 12px)\",\r\n                right: \"8px\",\r\n              },\r\n              \"& .Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n                border: \"none\",\r\n              },\r\n            }}\r\n          >\r\n            {/* <InputLabel>Sort by</InputLabel> */}\r\n            <Select\r\n              value={sort}\r\n              onChange={handleSortChange}\r\n              label=\"Sort by\"\r\n              MenuProps={{\r\n                PaperProps: {\r\n                  sx: {\r\n                    borderRadius: \"8px\",\r\n                    boxShadow: 5,\r\n                    marginTop: \"30px\",\r\n                    \"& .MuiMenuItem-root\": {\r\n                      padding: \"12px 16px\",\r\n                    },\r\n                    \"& .MuiDivider-root\": {\r\n                      margin: \"0 16px\",\r\n                    },\r\n                  },\r\n                },\r\n              }}\r\n              sx={{\r\n                \"& .MuiSelect-select\": {\r\n                  padding: \"8px 16px\",\r\n                  fontSize: \"14px\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                },\r\n              }}\r\n            >\r\n              <MenuItem value=\"Newest\">Newest</MenuItem>\r\n              <MenuItem value=\"Oldest\">Oldest</MenuItem>\r\n              <MenuItem value=\"Name\">Name</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Grid Display */}\r\n      <Grid container spacing={4} mt={3}>\r\n        {paginatedAgents.map((agent) => (\r\n          <Grid item xs={12} sm={12} md={12} key={agent.id}>\r\n            <Card\r\n              sx={{\r\n                borderRadius: \"12px\",\r\n                boxShadow: \"none\",\r\n                border: \"2px solid #EBEBEB\",\r\n              }}\r\n            >\r\n              <Box>\r\n                <Box p={2} sx={{ display: \"flex\", gap: 2, flexDirection: {xs: \"column\", sm: \"row\"}}}>\r\n                  <Box\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      width: {xs: \"100%\", sm: \"30%\"},\r\n                    }}\r\n                  >\r\n                    <Image\r\n                      src={agent.image}\r\n                      alt={`${agent.name} profile`}\r\n                      layout=\"responsive\"\r\n                      width={650}\r\n                      height={500}\r\n                      style={{ objectFit: \"contain\" }}\r\n                    />\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: {xs: \"24px\", sm: \"28px\", md: \"34px\"},\r\n                        fontWeight: 700,\r\n                        color: \"#484848\",\r\n                        mt: 3,\r\n                      }}\r\n                    >\r\n                      {agent.name}\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: {xs: \"18px\", sm: \"22px\", md: \"26px\"},\r\n                        fontWeight: 400,\r\n                        color: \"#6F6F6F\",\r\n                      }}\r\n                    >\r\n                      {agent.role}\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: {xs: \"18px\", sm: \"22px\", md: \"26px\"},\r\n                        fontWeight: 400,\r\n                        color: \"#484848\",\r\n                        mt: 2,\r\n                      }}\r\n                    >\r\n                      Phone: {agent.phone}\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: {xs: \"18px\", sm: \"22px\", md: \"26px\"},\r\n                        fontWeight: 400,\r\n                        color: \"#484848\",\r\n                        mt: 1,\r\n                      }}\r\n                    >\r\n                      Email: {agent.email}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n                <Divider />\r\n                <Box\r\n                  sx={{\r\n                    display: \" flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    alignItems: \"center\",\r\n                    py: 2,\r\n                    px: 2,\r\n                  }}\r\n                >\r\n                  <Button\r\n                    size=\"large\"\r\n                    style={{\r\n                      marginTop: \"10px\",\r\n                      border: \"none\",\r\n                      textTransform: \"none\",\r\n                      fontSize: {xs: \"18px\", sm: \"22px\", md: \"26px\"},\r\n                      fontWeight: 400,\r\n                      color: \"#5D5D5D\",\r\n                    }}\r\n                  >\r\n                    View My Listings\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* Pagination */}\r\n      {/* <div\r\n        style={{ marginTop: \"20px\", display: \"flex\", justifyContent: \"center\" }}\r\n      >\r\n        <Pagination\r\n          count={Math.ceil(sortedAgents.length / ITEMS_PER_PAGE)}\r\n          page={page}\r\n          onChange={handlePageChange}\r\n        />\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 937, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 943, "column": 0}, "map": {"version":3,"sources":["file://E%3A/My%20Projects/Desun/Real%20state/New%20Patrick/New%20folder/new-real-estate-web/src/components/Agents/AgentsIndex.js"],"sourcesContent":["\"use client\"\r\nimport { Box, Container, IconButton, } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Heading from \"./components/Heading\";\r\nimport GridViewIcon from \"@mui/icons-material/GridView\";\r\nimport FormatListBulletedIcon from \"@mui/icons-material/FormatListBulleted\";\r\nimport AgentsGridView from \"./components/AgenttsGridView\";\r\nimport AgentListView from \"./components/AgentListView\";\r\n\r\n\r\nexport default function AgentsIndex() {\r\n    const [viewMode, setViewMode] = useState(\"grid\");\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ px: { lg: 7, xs: 2 } }}>\r\n      <Heading />\r\n      {/* <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          display: {xs: \"none\", md: \"flex\"},\r\n          gap: {xs: 1, md: 2},\r\n          justifyContent: \"flex-end\",\r\n          mt: -7,\r\n          mb: 1,\r\n        }}\r\n      >\r\n        <IconButton\r\n          onClick={() => setViewMode(\"grid\")}\r\n          sx={{\r\n            borderRadius: \"8px\",\r\n            border: `2px solid #E3E3E3`,\r\n            color: \"#4D4D4D\",\r\n            \"&:hover\": {\r\n              background: \"#E3E3E3\",\r\n              color: \"#4D4D4D\",\r\n            },\r\n              background:`${\r\n                viewMode === \"grid\" ? \"#E3E3E3\" : \"#fff\"\r\n              }`,\r\n            height: \"50px\",\r\n            width: \"50px\",\r\n          }}\r\n        >\r\n          <GridViewIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={() => setViewMode(\"list\")}\r\n          sx={{\r\n            borderRadius: \"8px\",\r\n            border: `2px solid #E3E3E3`,\r\n            color: \"#4D4D4D\",\r\n            \"&:hover\": {\r\n              background: \"#E3E3E3\",\r\n              color: \"#4D4D4D\",\r\n            },\r\n              background:`${\r\n                viewMode === \"list\" ? \"#E3E3E3\" : \"#fff\"\r\n              }`,\r\n            height: \"50px\",\r\n            width: \"50px\",\r\n          }}\r\n        >\r\n          <FormatListBulletedIcon />\r\n        </IconButton>\r\n      </Box> */}\r\n      {/* {viewMode === \"grid\" ? ( */}\r\n            <AgentsGridView  />\r\n          {/* ) : ( */}\r\n            {/* <AgentListView  view=\"list\" /> */}\r\n          {/* )} */}\r\n          \r\n    </Container>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAGA;AACA;AANA;;;AADA;;;;;;;;AAUe,SAAS;;IACpB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,qBACE,6LAAC,sMAAA,CAAA,YAAS;QAAC,UAAS;QAAK,IAAI;YAAE,IAAI;gBAAE,IAAI;gBAAG,IAAI;YAAE;QAAE;;0BAClD,6LAAC,uJAAA,CAAA,UAAO;;;;;0BAmDF,6LAAC,+JAAA,CAAA,UAAc;;;;;;;;;;;AAO3B;GA9DwB;KAAA"}},
    {"offset": {"line": 998, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}